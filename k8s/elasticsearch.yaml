apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - mailarchive
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: sysctl
          image: busybox
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        - name: update-keystore
          command:
          - sh
          - -c
          - |
            whoami
            pwd
            echo "$(printenv AZURE_BACKUP_ACCOUNT)" | bin/elasticsearch-keystore add --stdin --force azure.client.default.account
            echo "$(printenv AZURE_BACKUP_KEY)" | bin/elasticsearch-keystore add --stdin --force azure.client.default.key
            ls -l config
            bin/elasticsearch-keystore list
            cp -r --preserve=mode,ownership /usr/share/elasticsearch/config/. /tmp/keystore/
          env:
            - name: AZURE_BACKUP_KEY
              valueFrom:
                secretKeyRef:
                  name: ml-secrets-env
                  key: AZURE_BACKUP_KEY
            - name: AZURE_BACKUP_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: ml-secrets-env
                  key: AZURE_BACKUP_ACCOUNT
            - name: AZURE_BACKUP_CONTAINER
              valueFrom:
                secretKeyRef:
                  name: ml-secrets-env
                  key: AZURE_BACKUP_CONTAINER
            - name: AZURE_BACKUP_BASE_PATH
              valueFrom:
                secretKeyRef:
                  name: ml-secrets-env
                  key: AZURE_BACKUP_BASE_PATH
          image: "ghcr.io/ietf-tools/mailarchive-elasticsearch:latest"
          imagePullPolicy: IfNotPresent
          resources: {}
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: es-config
            mountPath: /tmp/keystore/
      containers:
        - image: "ghcr.io/ietf-tools/mailarchive-elasticsearch:latest"
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
            - name: elasticsearch
              containerPort: 9200
              protocol: TCP
          volumeMounts:
            - name: es-data
              mountPath: /usr/share/elasticsearch/data
            - name: es-snapshots
              mountPath: /mnt/snapshots
            - name: es-config
              mountPath: /usr/share/elasticsearch/config
          env:
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: "true"
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ml-secrets-env
                  key: ELASTICSEARCH_PASSWORD
            - name: path.repo
              value: /mnt/snapshots
            - name: ES_JAVA_OPTS
              value: "-Xms1g -Xmx1g"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            # elasticsearch image sets up uid/gid 1000:0
            runAsUser: 1000
            runAsGroup: 1000
          resources:
            requests:
              memory: "2Gi"
              cpu: "2"
            limits:
              memory: "4Gi"
              cpu: "2"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        # To be overriden with the actual shared volume
        - name: es-snapshots
        - name: es-config
  volumeClaimTemplates:
  - metadata:
      name: es-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 32Gi
      # storageClassName: ""
  - metadata:
      name: es-config # PVC for Elasticsearch configuration
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
spec:
  type: ClusterIP
  ports:
    - port: 9200
      targetPort: elasticsearch
      protocol: TCP
      name: elasticsearch
  selector:
    app: elasticsearch
